/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_idreamsky_gloox_GlooxNative */

#ifndef _Included_com_idreamsky_gloox_GlooxNative
#define _Included_com_idreamsky_gloox_GlooxNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_idreamsky_gloox_GlooxNative
 * Method:    initialize
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_com_idreamsky_gloox_GlooxNative_initialize
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     com_idreamsky_gloox_GlooxNative
 * Method:    login
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_idreamsky_gloox_GlooxNative_login
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_idreamsky_gloox_GlooxNative
 * Method:    sendMessage
 * Signature: (Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_idreamsky_gloox_GlooxNative_sendMessage
  (JNIEnv *, jobject, jstring, jstring, jint);

/*
 * Class:     com_idreamsky_gloox_GlooxNative
 * Method:    joinChatRoom
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_idreamsky_gloox_GlooxNative_joinChatRoom
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_idreamsky_gloox_GlooxNative
 * Method:    leaveChatRoom
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_idreamsky_gloox_GlooxNative_leaveChatRoom
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_idreamsky_gloox_GlooxNative
 * Method:    logout
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_idreamsky_gloox_GlooxNative_logout
  (JNIEnv *, jobject);

static int getEnv(JNIEnv **env, bool* pIsAttached);

static int detachCurrentThread(bool isAttached);

static int register_com_idreamsky_gloox_GlooxNativeCallbacks(JNIEnv* env);

class JNINativeCallbackMethod;

const JNINativeCallbackMethod* getJNINativeCallbackMethod(const char* funcName);

char* jstringToCharstring(JNIEnv* env, jstring jstr);

jstring charStringtoJstring(JNIEnv* env, const char* pat);

#ifdef __cplusplus
}
#endif
#endif
